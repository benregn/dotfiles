# Shortcuts

alias edit='subl ~/.dotfiles'

alias _="sudo"
alias g="git"
alias rr="rm -rf"

alias gs='git status -sb'
alias gmm='git commit -m'

alias dc='docker-compose'

# is-executable hub && eval "$(hub alias -s)" # alias git=hub

# Global aliases
# http://zsh.sourceforge.net/Intro/intro_8.html
if $(is-supported "alias -g"); then
	alias -g G="| grep -i"
	alias -g H="| head"
	alias -g T="| tail"
	alias -g L="| less"
fi

# List declared aliases, functions

alias listgitaliases="git config --get-regexp alias"
alias listaliases="alias | sed 's/=.*//'"
alias listfunctions="declare -f | grep '^[a-z].* ()' | sed 's/{$//'" # show non _prefixed functions

# ls

LS_COLORS=`is-supported "ls --color" --color -G`
LS_TIMESTYLEISO=`is-supported "ls --time-style=long-iso" --time-style=long-iso`
LS_GROUPDIRSFIRST=`is-supported "ls --group-directories-first" --group-directories-first`

alias l="ls -lahAF ${LS_COLORS} ${LS_TIMESTYLEISO} ${LS_GROUPDIRSFIRST}"
alias ll=l
alias lt="ls -lhAtrF ${LS_COLORS} ${LS_TIMESTYLEISO} ${LS_GROUPDIRSFIRST}"
alias ld="ls -ldF ${LS_COLORS} */"

unset LS_COLORS LS_TIMESTYLEISO LS_GROUPDIRSFIRST

# cd

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias -- -="cd -"
alias cd.='cd $(readlink -f .)'

alias bd=". bd -s"

# tree

alias tree="tree -A"
alias treed="tree -d"
alias tree1="tree -d -L 1"
alias tree2="tree -d -L 2"

# rsync

alias rsync="rsync -vh"

# faster npm in europe
alias npme="npm --registry http://registry.npmjs.eu"

# Network

alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias ipl="ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"

# Request using GET, POST, etc. method

for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
	alias "$method"="lwp-request -m '$method'"
done

# Recursively remove Apple meta files

alias cleanupds="find . -type f -name '*.DS_Store' -ls -exec /bin/rm {} \;"
alias cleanupad="find . -type d -name .AppleDouble -ls -exec /bin/rm -r {} \;"

# Python
alias venv3="mkvirtualenv -r ${DOTFILES_DIR}/install/requirements-virtualenv.txt --python=`which python3`"
