## Prompt

_bash_prompt_config() {

	if $SHELL_BASH; then
        local USER_SYMBOL="\u"
        local HOST_SYMBOL="\h"
        local ESC_OPEN="\["
        local ESC_CLOSE="\]"
    else
        # Assume zsh
        local USER_SYMBOL="%n"
        local HOST_SYMBOL=%m
        local ESC_OPEN="%{"
        local ESC_CLOSE="%}"
	fi


    if tput setaf >/dev/null 2>&1 ; then
        _setaf () { tput setaf "$1" ; }
        #local _RESET="$( { tput sgr0 || tput me ; } 2>/dev/null )"
        local RESET="${OPEN_ESC}$( { tput sgr0 || tput me ; } 2>/dev/null )${CLOSE_ESC}"
        local BOLD="$( { tput bold || tput md ; } 2>/dev/null )"
    else
        # Fallback
        _setaf () { echo "\033[0;$(($1+30))m" ; }
        local RESET="\033[m"
        local BOLD=""
        ESC_OPEN=""
        ESC_CLOSE=""
    fi

    # Normal colors
	local BLACK="${ESC_OPEN}$(_setaf 0)${ESC_CLOSE}"
	local RED="${ESC_OPEN}$(_setaf 1)${ESC_CLOSE}"
	local GREEN="${ESC_OPEN}$(_setaf 2)${ESC_CLOSE}"
	local YELLOW="${ESC_OPEN}$(_setaf 3)${ESC_CLOSE}"
	local BLUE="${ESC_OPEN}$(_setaf 4)${ESC_CLOSE}"
	local VIOLET="${ESC_OPEN}$(_setaf 5)${ESC_CLOSE}"
	local CYAN="${ESC_OPEN}$(_setaf 6)${ESC_CLOSE}"
	local WHITE="${ESC_OPEN}$(_setaf 7)${ESC_CLOSE}"

    # Bold colors
	local BLACK_BOLD="${ESC_OPEN}${BOLD}$(_setaf 0)${ESC_CLOSE}"
	local RED_BOLD="${ESC_OPEN}${BOLD}$(_setaf 1)${ESC_CLOSE}"
	local GREEN_BOLD="${ESC_OPEN}${BOLD}$(_setaf 2)${ESC_CLOSE}"
	local YELLOW_BOLD="${ESC_OPEN}${BOLD}$(_setaf 3)${ESC_CLOSE}"
	local BLUE_BOLD="${ESC_OPEN}${BOLD}$(_setaf 4)${ESC_CLOSE}"
	local VIOLET_BOLD="${ESC_OPEN}${BOLD}$(_setaf 5)${ESC_CLOSE}"
	local CYAN_BOLD="${ESC_OPEN}${BOLD}$(_setaf 6)${ESC_CLOSE}"
	local WHITE_BOLD="${ESC_OPEN}${BOLD}$(_setaf 7)${ESC_CLOSE}"

    # Expose the variables we need in prompt command
    P_USER=${GREEN}${USER_SYMBOL}
    P_HOST=${BLUE}${HOST_SYMBOL}
    P_GREEN=${GREEN}
    P_YELLOW=${YELLOW}
    P_RED=${RED}
    P_RESET=${RESET}

}

function virtualenv_prompt_info() {
    if [ -n "$VIRTUAL_ENV" ]; then
        if [ -f "$VIRTUAL_ENV/__name__" ]; then
            local name=`cat $VIRTUAL_ENV/__name__`
        elif [ `basename $VIRTUAL_ENV` = "__" ]; then
            local name=$(basename $(dirname $VIRTUAL_ENV))
        else
            local name=$(basename $VIRTUAL_ENV)
        fi
        echo "($name) "
    fi
}

bash_prompt_command() {

    local EXIT_CODE=$?
    local P_EXIT=""
    local MAXLENGTH=35
    local TRUNC_SYMBOL=".."
    local DIR=${PWD##*/}
    local P_PWD=${PWD/#$HOME/\~}

    MAXLENGTH=$(( ( MAXLENGTH < ${#DIR} ) ? ${#DIR} : MAXLENGTH ))

    local OFFSET=$(( ${#P_PWD} - MAXLENGTH ))

    if [ ${OFFSET} -gt "0" ]; then
        P_PWD=${P_PWD:$OFFSET:$MAXLENGTH}
        P_PWD=${TRUNC_SYMBOL}/${P_PWD#*/}
    fi

    # Update terminal title
    if [[ $TERM == xterm* ]]; then
        echo -ne "\033]0;${P_PWD}\007"
    fi

    # Parse Git branch name
	P_GIT=$(parse_git_branch)

    # Exit code
    if [[ $EXIT_CODE != 0 ]]; then
        P_EXIT+="${P_RED}✘ ${P_RESET}"
    fi

    PS1="${P_EXIT}$(date +"[%H:%M:%S]") $(virtualenv_prompt_info)${P_USER}${P_YELLOW}@${P_HOST} ${P_YELLOW}${P_PWD}${P_GREEN}${P_GIT}${P_YELLOW} ❯ ${P_RESET}"
}

parse_git_branch() {
	local OUT=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ "$OUT" != "" ]; then echo " $OUT"; fi
}

_bash_prompt_config
unset _bash_prompt_config

if $SHELL_BASH; then
    PROMPT_COMMAND=bash_prompt_command
else
    # Assume zsh
    autoload -U colors && colors
    setopt PROMPT_SUBST
    function precmd() {
        local EXIT_CODE=$?
        local P_EXIT=""
        local MAXLENGTH=35
        local TRUNC_SYMBOL=".."
        local DIR=${PWD##*/}
        local P_PWD=${PWD/#$HOME/\~}

        MAXLENGTH=$(( ( MAXLENGTH < ${#DIR} ) ? ${#DIR} : MAXLENGTH ))

        local OFFSET=$(( ${#P_PWD} - MAXLENGTH ))

        if [ ${OFFSET} -gt "0" ]; then
            P_PWD=${P_PWD:$OFFSET:$MAXLENGTH}
            P_PWD=${TRUNC_SYMBOL}/${P_PWD#*/}
        fi
        if [[ $EXIT_CODE != 0 ]]; then
            P_EXIT+="%{$fg[red]%}✘ %{$reset_color%}"
        fi
        print -rP ${P_EXIT}%{$fg[white]%}$(date +"[%H:%M:%S]")%{$reset_color%} $(virtualenv_prompt_info)%{$fg[green]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}${P_PWD}%{$fg[green]%}$(parse_git_branch)%{$fg[yellow]%}%{$reset_color%}
    }
    export PROMPT="%{$fg[yellow]%} ❯ %{$reset_color%}"
fi
